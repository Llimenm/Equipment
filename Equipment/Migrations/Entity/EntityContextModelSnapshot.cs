// <auto-generated />
using System;
using Equipment.M;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equipment.Migrations.Entity
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("OKB3Admin.M.ATS.TelefonDop_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ContactGID")
                        .HasColumnType("char(36)");

                    b.Property<int>("TNumber_d")
                        .HasColumnType("int");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("TNumber_d")
                        .IsUnique();

                    b.ToTable("TelefonDop");
                });

            modelBuilder.Entity("OKB3Admin.M.ATS.TelefonMain_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ContactGID")
                        .HasColumnType("char(36)");

                    b.Property<int>("SubNumber_m")
                        .HasColumnType("int");

                    b.Property<int>("TNumber_m")
                        .HasColumnType("int");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("TNumber_m")
                        .IsUnique();

                    b.ToTable("TelefonMain");
                });

            modelBuilder.Entity("OKB3Admin.M.ATS.Telefon_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ContactGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Kabel")
                        .HasColumnType("longtext");

                    b.Property<string>("MacAdress")
                        .HasColumnType("longtext");

                    b.Property<string>("Magistral")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MestoGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("OborudovanieName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OtdelenieGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Raspredelenie")
                        .HasColumnType("longtext");

                    b.Property<string>("ServerAddress")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TelefonDopGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("TelefonLineNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TelefonMainGID")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.ToTable("Telefons");
                });

            modelBuilder.Entity("OKB3Admin.M.Agents.Address_m", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Dom")
                        .HasColumnType("longtext");

                    b.Property<string>("Gorod")
                        .HasColumnType("longtext");

                    b.Property<string>("PostIndex")
                        .HasColumnType("longtext");

                    b.Property<string>("Ulica")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("OKB3Admin.M.InventorySystem.InventoryNumber_M", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Inventory")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<Guid?>("OtdelenieGID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Inventory")
                        .IsUnique();

                    b.HasIndex("OtdelenieGID");

                    b.ToTable("InventoryNumbers");
                });

            modelBuilder.Entity("OKB3Admin.M.News.NewsPost_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanPost")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<byte[]>("File")
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<bool>("HaveMainText")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("Img")
                        .HasColumnType("longblob");

                    b.Property<string>("MainText")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortText")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.ToTable("NewsPosts");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge", b =>
                {
                    b.Property<Guid>("GuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AsuId")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ModelGuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OtdelGID")
                        .HasColumnType("char(36)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("GuId");

                    b.HasIndex("AsuId")
                        .IsUnique();

                    b.HasIndex("ModelGuid");

                    b.HasIndex("OtdelGID");

                    b.HasIndex("StatusCode");

                    b.ToTable("Cartridges");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge_Model", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Group")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ManufacturerGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(95)");

                    b.HasKey("Guid");

                    b.HasIndex("ManufacturerGuid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cartridge_Models");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge_Status", b =>
                {
                    b.Property<int>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(95)");

                    b.HasKey("StatusCode");

                    b.HasIndex("StatusCode", "Name")
                        .IsUnique();

                    b.ToTable("Cartridge_Statuses");

                    b.HasData(
                        new
                        {
                            StatusCode = 1,
                            Name = "Нет"
                        },
                        new
                        {
                            StatusCode = 2,
                            Name = "Готов к отправке"
                        },
                        new
                        {
                            StatusCode = 3,
                            Name = "Готов к заправке"
                        },
                        new
                        {
                            StatusCode = 4,
                            Name = "Заправка"
                        },
                        new
                        {
                            StatusCode = 5,
                            Name = "На складе"
                        },
                        new
                        {
                            StatusCode = 6,
                            Name = "В эксплуатации"
                        },
                        new
                        {
                            StatusCode = 7,
                            Name = "Списан"
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge_StatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CartridgeGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Commentary")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("NewOtdelenieGuid")
                        .HasColumnType("char(36)");

                    b.Property<int>("NewStatusCode")
                        .HasColumnType("int");

                    b.Property<Guid>("OldOtdelenieGuid")
                        .HasColumnType("char(36)");

                    b.Property<int>("OldStatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartridgeGuid");

                    b.HasIndex("NewOtdelenieGuid");

                    b.HasIndex("NewStatusCode");

                    b.HasIndex("OldOtdelenieGuid");

                    b.HasIndex("OldStatusCode");

                    b.ToTable("Cartridge_StatusLogs");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Changes")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemId")
                        .HasColumnType("longtext");

                    b.Property<int>("LogCategoryEnum")
                        .HasColumnType("int");

                    b.Property<int>("LogTypeEnum")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Manufacturer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("Guid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AsuId")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HardwareName")
                        .HasColumnType("longtext");

                    b.Property<int?>("InventoryDataId")
                        .HasColumnType("int");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<bool>("IsNetwork")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MAC")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModelGuid")
                        .HasColumnType("char(36)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("InventoryDataId");

                    b.HasIndex("ModelGuid");

                    b.HasIndex("StatusCode");

                    b.HasIndex("AsuId", "InventoryNumber")
                        .IsUnique();

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer_Model", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("DeleteMark")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ManufacturerGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("Guid");

                    b.HasIndex("ManufacturerGuid");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Printer_Models");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer_Status", b =>
                {
                    b.Property<int>("StatusCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("StatusCode");

                    b.HasIndex("StatusCode")
                        .IsUnique();

                    b.ToTable("Printer_Statuses");

                    b.HasData(
                        new
                        {
                            StatusCode = 1,
                            Name = "Нет"
                        },
                        new
                        {
                            StatusCode = 2,
                            Name = "На складе"
                        },
                        new
                        {
                            StatusCode = 3,
                            Name = "В ремонте"
                        },
                        new
                        {
                            StatusCode = 4,
                            Name = "В эксплуатации"
                        },
                        new
                        {
                            StatusCode = 5,
                            Name = "На замене"
                        },
                        new
                        {
                            StatusCode = 6,
                            Name = "Подготовлен к ремонту"
                        },
                        new
                        {
                            StatusCode = 7,
                            Name = "После ремонта"
                        },
                        new
                        {
                            StatusCode = 8,
                            Name = "Обслуживание в АСУ"
                        },
                        new
                        {
                            StatusCode = 9,
                            Name = "Списан"
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer_StatusLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime")
                        .HasColumnName("DateTime");

                    b.Property<string>("Commentary")
                        .HasColumnType("longtext");

                    b.Property<int>("NewStatusCode")
                        .HasColumnType("int");

                    b.Property<int>("OldStatusCode")
                        .HasColumnType("int");

                    b.Property<Guid>("PrinterGuid")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NewStatusCode");

                    b.HasIndex("OldStatusCode");

                    b.HasIndex("PrinterGuid");

                    b.ToTable("Printer_StatusLogs");
                });

            modelBuilder.Entity("OKB3Admin.M.RequestServis.ERaports.ER_Raport", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AddData")
                        .HasColumnType("datetime");

                    b.Property<int>("ERRaportShablon")
                        .HasColumnType("int");

                    b.Property<string>("EndText")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ErRaportId_base")
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("File")
                        .HasColumnType("longblob");

                    b.Property<string>("FileExtention")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("IspolnitelSotrudnikGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("JsonComentList")
                        .HasColumnType("longtext");

                    b.Property<string>("JsonNavigation")
                        .HasColumnType("longtext");

                    b.Property<string>("JsonTextTable")
                        .HasColumnType("longtext");

                    b.Property<string>("MainText")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OtdelenieGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("PositionGIDOtdelenie")
                        .HasColumnType("longtext");

                    b.Property<byte>("PositionNumber")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("ServiceUserGID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SotrudnikGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("SubText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateData")
                        .HasColumnType("datetime");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.ToTable("ER_Raports");
                });

            modelBuilder.Entity("OKB3Admin.M.RequestServis.ERaports.ER_Raport_Shablon", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<bool>("InWork")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JsonNavigation")
                        .HasColumnType("longtext");

                    b.Property<string>("MainText")
                        .HasColumnType("longtext");

                    b.Property<string>("NameShablon")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.ToTable("ER_Raport_Shablons");
                });

            modelBuilder.Entity("OKB3Admin.M.RequestServis.RequestCategory_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("Index")
                        .IsUnique();

                    b.HasIndex("NameCategory")
                        .IsUnique();

                    b.ToTable("RequestCategories");
                });

            modelBuilder.Entity("OKB3Admin.M.RequestServis.RequestSubCategory_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryGID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModuleName")
                        .HasColumnType("longtext");

                    b.Property<string>("NameSubCategory")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<string>("SubIndex")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("NameSubCategory")
                        .IsUnique();

                    b.HasIndex("SubIndex")
                        .IsUnique();

                    b.ToTable("RequestSubCategories");
                });

            modelBuilder.Entity("OKB3Admin.M.RequestServis.Request_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ChangeStatusTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("InfoZayavka")
                        .HasColumnType("longtext");

                    b.Property<string>("ModuleName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OtdelenieGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("RequestCategoryGID")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestCategoryName")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestSubCategoryGID")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestSubCategoryName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ServisUserGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("StatusComent")
                        .HasColumnType("longtext");

                    b.Property<int>("curIniciativeType")
                        .HasColumnType("int");

                    b.Property<int>("curStatus")
                        .HasColumnType("int");

                    b.Property<byte[]>("file")
                        .HasColumnType("longblob");

                    b.Property<string>("file_name")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("OKB3Admin.M.Staf.Sotrudnik_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("MainTabelNumber")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OtdelenieGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Patron")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostStafGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Snils")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Sur")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserGID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserWebGID")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("MainTabelNumber")
                        .IsUnique();

                    b.HasIndex("OtdelenieGID");

                    b.HasIndex("Snils")
                        .IsUnique();

                    b.ToTable("Sotrudniks");

                    b.HasData(
                        new
                        {
                            GID = new Guid("a3b5899d-36b3-4f2d-aa96-dd3174a6a6a4"),
                            MainTabelNumber = "01",
                            Name = "G",
                            OtdelenieGID = new Guid("a92f0cb6-bbc2-4001-9894-c7c7099580c7"),
                            Patron = "R",
                            Snils = "1234567890",
                            Sur = "E",
                            UserGID = new Guid("add4a22a-aaa1-4d36-90ed-77102df1e5b8")
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.Staf.StafPost_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("NamePost")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("GID");

                    b.HasIndex("NamePost")
                        .IsUnique();

                    b.ToTable("StafPosts");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Korpus_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<Guid?>("PodrazdelenieGID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("mestoGID")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PodrazdelenieGID");

                    b.ToTable("Korpus");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Mesto_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Blok")
                        .HasColumnType("longtext");

                    b.Property<string>("Etag")
                        .HasColumnType("longtext");

                    b.Property<string>("Kabinet")
                        .HasColumnType("longtext");

                    b.Property<string>("NameMesto")
                        .HasColumnType("longtext");

                    b.Property<bool>("Open")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("OtdelenieGID")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.ToTable("Mesto");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Otdelenie_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("KorpusGID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("KorpusGID");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Otdelenie");

                    b.HasData(
                        new
                        {
                            GID = new Guid("a92f0cb6-bbc2-4001-9894-c7c7099580c7"),
                            IsOpen = false,
                            Name = "Отделение",
                            Number = "01"
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Podrazdelenie_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("MainName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Psevdonim")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<Guid?>("mestoGID")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("Psevdonim")
                        .IsUnique();

                    b.ToTable("Podrazdelenies");
                });

            modelBuilder.Entity("OKB3Admin.M.Users.UserDostup_M", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("Dostup")
                        .HasColumnType("longblob");

                    b.Property<Guid>("UserGID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserGID")
                        .IsUnique();

                    b.ToTable("DostupData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dostup = new byte[] { 97, 100, 109, 105, 110, 58, 97, 95, 115, 116, 114, 117, 107, 116, 117, 114, 97, 58, 97, 95, 115, 116, 97, 102, 58, 97, 95, 117, 115, 101, 114, 101, 100, 105, 116, 111, 114, 58, 97, 95, 97, 116, 115, 58, 97, 95, 110, 101, 119, 115, 58, 97, 95, 114, 101, 113, 117, 101, 115, 116 },
                            UserGID = new Guid("add4a22a-aaa1-4d36-90ed-77102df1e5b8")
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.Users.Users_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<byte[]>("Pass")
                        .HasColumnType("longblob");

                    b.Property<Guid>("SotridnikGID")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("GID")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("SotridnikGID")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            GID = new Guid("add4a22a-aaa1-4d36-90ed-77102df1e5b8"),
                            Login = "sa",
                            Pass = new byte[] { 49 },
                            SotridnikGID = new Guid("a3b5899d-36b3-4f2d-aa96-dd3174a6a6a4")
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.VersionControll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.Property<string>("CurVersion")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationName")
                        .IsUnique();

                    b.HasIndex("Index")
                        .IsUnique();

                    b.ToTable("VersionControlls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationName = "OKBAdmin",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "admin"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationName = "OKBStruktura",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_struktura"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationName = "OKBStaf",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_staf"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationName = "OKBUserEditor",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_usereditor"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationName = "OKBATS",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_ats"
                        },
                        new
                        {
                            Id = 6,
                            ApplicationName = "OKBNews",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_news"
                        },
                        new
                        {
                            Id = 7,
                            ApplicationName = "OKBRequestServis",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_request"
                        },
                        new
                        {
                            Id = 8,
                            ApplicationName = "OKBPrinters",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "a_printers"
                        },
                        new
                        {
                            Id = 9,
                            ApplicationName = "OKB_Web_News",
                            CurVersion = "21.05.2021",
                            Enable = true,
                            Index = "w_news"
                        });
                });

            modelBuilder.Entity("OKB3Admin.M.InventorySystem.InventoryNumber_M", b =>
                {
                    b.HasOne("OKB3Admin.M.Structura.Otdelenie_M", "Otdelenie")
                        .WithMany("InventaryNumberCollection")
                        .HasForeignKey("OtdelenieGID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Otdelenie");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge", b =>
                {
                    b.HasOne("OKB3Admin.M.Printers.Cartridge_Model", "CartridgeModel")
                        .WithMany("Cartridges")
                        .HasForeignKey("ModelGuid");

                    b.HasOne("OKB3Admin.M.Structura.Otdelenie_M", "Otdel")
                        .WithMany()
                        .HasForeignKey("OtdelGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Printers.Cartridge_Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartridgeModel");

                    b.Navigation("Otdel");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge_Model", b =>
                {
                    b.HasOne("OKB3Admin.M.Printers.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerGuid");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge_StatusLog", b =>
                {
                    b.HasOne("OKB3Admin.M.Printers.Cartridge", "Cartridge")
                        .WithMany("Changelog")
                        .HasForeignKey("CartridgeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Structura.Otdelenie_M", "NewOtdelenie")
                        .WithMany()
                        .HasForeignKey("NewOtdelenieGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Printers.Cartridge_Status", "NewStatus")
                        .WithMany()
                        .HasForeignKey("NewStatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Structura.Otdelenie_M", "OldOtdelenie")
                        .WithMany()
                        .HasForeignKey("OldOtdelenieGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Printers.Cartridge_Status", "OldStatus")
                        .WithMany()
                        .HasForeignKey("OldStatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartridge");

                    b.Navigation("NewOtdelenie");

                    b.Navigation("NewStatus");

                    b.Navigation("OldOtdelenie");

                    b.Navigation("OldStatus");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer", b =>
                {
                    b.HasOne("OKB3Admin.M.InventorySystem.InventoryNumber_M", "InventoryData")
                        .WithMany()
                        .HasForeignKey("InventoryDataId");

                    b.HasOne("OKB3Admin.M.Printers.Printer_Model", "PrinterModel")
                        .WithMany("Printers")
                        .HasForeignKey("ModelGuid");

                    b.HasOne("OKB3Admin.M.Printers.Printer_Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryData");

                    b.Navigation("PrinterModel");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer_Model", b =>
                {
                    b.HasOne("OKB3Admin.M.Printers.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerGuid");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer_StatusLog", b =>
                {
                    b.HasOne("OKB3Admin.M.Printers.Printer_Status", "NewStatus")
                        .WithMany()
                        .HasForeignKey("NewStatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Printers.Printer_Status", "OldStatus")
                        .WithMany()
                        .HasForeignKey("OldStatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OKB3Admin.M.Printers.Printer", "Printer")
                        .WithMany("Changelogs")
                        .HasForeignKey("PrinterGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewStatus");

                    b.Navigation("OldStatus");

                    b.Navigation("Printer");
                });

            modelBuilder.Entity("OKB3Admin.M.Staf.Sotrudnik_M", b =>
                {
                    b.HasOne("OKB3Admin.M.Structura.Otdelenie_M", "Otdelenie")
                        .WithMany("SotrudnikCollection")
                        .HasForeignKey("OtdelenieGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Otdelenie");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Korpus_M", b =>
                {
                    b.HasOne("OKB3Admin.M.Structura.Podrazdelenie_M", "Podrazdelenie")
                        .WithMany("KorpusCollection")
                        .HasForeignKey("PodrazdelenieGID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Podrazdelenie");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Otdelenie_M", b =>
                {
                    b.HasOne("OKB3Admin.M.Structura.Korpus_M", "Korpus")
                        .WithMany("OtdelenieCollection")
                        .HasForeignKey("KorpusGID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Korpus");
                });

            modelBuilder.Entity("OKB3Admin.M.Users.Users_M", b =>
                {
                    b.HasOne("OKB3Admin.M.Staf.Sotrudnik_M", "Sotrudnik")
                        .WithOne("User")
                        .HasForeignKey("OKB3Admin.M.Users.Users_M", "SotridnikGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sotrudnik");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge", b =>
                {
                    b.Navigation("Changelog");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Cartridge_Model", b =>
                {
                    b.Navigation("Cartridges");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Manufacturer", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer", b =>
                {
                    b.Navigation("Changelogs");
                });

            modelBuilder.Entity("OKB3Admin.M.Printers.Printer_Model", b =>
                {
                    b.Navigation("Printers");
                });

            modelBuilder.Entity("OKB3Admin.M.Staf.Sotrudnik_M", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Korpus_M", b =>
                {
                    b.Navigation("OtdelenieCollection");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Otdelenie_M", b =>
                {
                    b.Navigation("InventaryNumberCollection");

                    b.Navigation("SotrudnikCollection");
                });

            modelBuilder.Entity("OKB3Admin.M.Structura.Podrazdelenie_M", b =>
                {
                    b.Navigation("KorpusCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
