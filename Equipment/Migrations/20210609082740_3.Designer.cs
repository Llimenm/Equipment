// <auto-generated />
using System;
using Equipment.M.EquipmentContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equipment.Migrations
{
    [DbContext(typeof(EqContext))]
    [Migration("20210609082740_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Account_M", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acc_user")
                        .HasColumnType("longtext");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Chipset_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("Socket_guid")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("Socket_guid");

                    b.ToTable("Chipset");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Inventory_m", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Inventory")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("Otdelenie_guid")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Komplekt_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Account_id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<int>("Inventory_id")
                        .HasColumnType("int");

                    b.Property<Guid?>("Otdelenie_gid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Status_guid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Type_eq_guid")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("Account_id");

                    b.HasIndex("Inventory_id");

                    b.HasIndex("Status_guid");

                    b.HasIndex("Type_eq_guid");

                    b.ToTable("Komplekt");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.MB_K_M", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid?>("Komplekt_guid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Motherboard_guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("Ports_id")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Komplekt_guid");

                    b.HasIndex("Motherboard_guid");

                    b.ToTable("Motherboards_K");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.MB_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Chipset_guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("M2_count")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<int>("OnKomplekt")
                        .HasColumnType("int");

                    b.Property<int>("Ports_id")
                        .HasColumnType("int");

                    b.Property<int>("Ram_count")
                        .HasColumnType("int");

                    b.Property<Guid?>("Ram_type_guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("Socket_count")
                        .HasColumnType("int");

                    b.Property<Guid?>("Socket_guid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Type_eq_guid")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("Chipset_guid");

                    b.HasIndex("Ram_type_guid");

                    b.HasIndex("Socket_guid");

                    b.HasIndex("Type_eq_guid");

                    b.ToTable("Motherboards");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Monitor_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Inventory_id")
                        .HasColumnType("int");

                    b.Property<Guid?>("Komplekt_guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("Otdelenie_guid")
                        .HasColumnType("char(36)");

                    b.Property<int>("Ports_id")
                        .HasColumnType("int");

                    b.Property<Guid?>("Status_guid")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TypeEq_guid")
                        .HasColumnType("char(36)");

                    b.HasKey("GID");

                    b.HasIndex("Inventory_id");

                    b.HasIndex("Komplekt_guid");

                    b.HasIndex("Status_guid");

                    b.HasIndex("TypeEq_guid");

                    b.ToTable("Monitor");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Ports_M", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("COM")
                        .HasColumnType("int");

                    b.Property<int>("DP")
                        .HasColumnType("int");

                    b.Property<int>("DVI_D")
                        .HasColumnType("int");

                    b.Property<int>("DVI_I")
                        .HasColumnType("int");

                    b.Property<int>("HDMI")
                        .HasColumnType("int");

                    b.Property<int>("LTP")
                        .HasColumnType("int");

                    b.Property<int>("PS2")
                        .HasColumnType("int");

                    b.Property<int>("VGA")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Ram_type_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.ToTable("Ram_type");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Socket_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.ToTable("Socket");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Status_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Type_eq_M", b =>
                {
                    b.Property<Guid>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Type_name")
                        .HasColumnType("longtext");

                    b.HasKey("GID");

                    b.ToTable("Type_equipment");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Chipset_M", b =>
                {
                    b.HasOne("Equipment.M.EquipmentContext.Models.Socket_M", "Socket")
                        .WithMany()
                        .HasForeignKey("Socket_guid");

                    b.Navigation("Socket");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Komplekt_M", b =>
                {
                    b.HasOne("Equipment.M.EquipmentContext.Models.Account_M", "Account")
                        .WithMany()
                        .HasForeignKey("Account_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment.M.EquipmentContext.Models.Inventory_m", "Inventory")
                        .WithMany()
                        .HasForeignKey("Inventory_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment.M.EquipmentContext.Models.Status_M", "Status")
                        .WithMany()
                        .HasForeignKey("Status_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.Type_eq_M", "Type_Eq")
                        .WithMany()
                        .HasForeignKey("Type_eq_guid");

                    b.Navigation("Account");

                    b.Navigation("Inventory");

                    b.Navigation("Status");

                    b.Navigation("Type_Eq");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.MB_K_M", b =>
                {
                    b.HasOne("Equipment.M.EquipmentContext.Models.Komplekt_M", "Komplekt")
                        .WithMany()
                        .HasForeignKey("Komplekt_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.MB_M", "Motherboard")
                        .WithMany()
                        .HasForeignKey("Motherboard_guid");

                    b.Navigation("Komplekt");

                    b.Navigation("Motherboard");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.MB_M", b =>
                {
                    b.HasOne("Equipment.M.EquipmentContext.Models.Chipset_M", "Chipset")
                        .WithMany()
                        .HasForeignKey("Chipset_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.Ram_type_M", "Ram_Type")
                        .WithMany()
                        .HasForeignKey("Ram_type_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.Socket_M", "Socket")
                        .WithMany()
                        .HasForeignKey("Socket_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.Type_eq_M", "Type_equipment")
                        .WithMany()
                        .HasForeignKey("Type_eq_guid");

                    b.Navigation("Chipset");

                    b.Navigation("Ram_Type");

                    b.Navigation("Socket");

                    b.Navigation("Type_equipment");
                });

            modelBuilder.Entity("Equipment.M.EquipmentContext.Models.Monitor_M", b =>
                {
                    b.HasOne("Equipment.M.EquipmentContext.Models.Inventory_m", "Inventory")
                        .WithMany()
                        .HasForeignKey("Inventory_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment.M.EquipmentContext.Models.Komplekt_M", "Komplekt")
                        .WithMany()
                        .HasForeignKey("Komplekt_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.Status_M", "Status")
                        .WithMany()
                        .HasForeignKey("Status_guid");

                    b.HasOne("Equipment.M.EquipmentContext.Models.Type_eq_M", "TypeEquipment")
                        .WithMany()
                        .HasForeignKey("TypeEq_guid");

                    b.Navigation("Inventory");

                    b.Navigation("Komplekt");

                    b.Navigation("Status");

                    b.Navigation("TypeEquipment");
                });
#pragma warning restore 612, 618
        }
    }
}
